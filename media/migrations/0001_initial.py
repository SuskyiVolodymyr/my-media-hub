# Generated by Django 5.0.6 on 2024-06-30 18:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Cartoon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("seasons", models.IntegerField(null=True)),
                ("episodes", models.IntegerField(null=True)),
                ("year_released", models.IntegerField(null=True)),
                (
                    "genre",
                    models.ManyToManyField(related_name="cartoons", to="media.genre"),
                ),
            ],
            options={
                "ordering": ("title",),
            },
        ),
        migrations.CreateModel(
            name="Anime",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("seasons", models.IntegerField(null=True)),
                ("episodes", models.IntegerField(null=True)),
                ("year_released", models.IntegerField(null=True)),
                (
                    "genre",
                    models.ManyToManyField(related_name="anime", to="media.genre"),
                ),
            ],
            options={
                "verbose_name_plural": "anime",
                "ordering": ("title",),
            },
        ),
        migrations.CreateModel(
            name="Movie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("year_released", models.IntegerField(null=True)),
                (
                    "genre",
                    models.ManyToManyField(related_name="movies", to="media.genre"),
                ),
            ],
            options={
                "ordering": ("title",),
            },
        ),
        migrations.CreateModel(
            name="Series",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("seasons", models.IntegerField(null=True)),
                ("episodes", models.IntegerField(null=True)),
                ("year_released", models.IntegerField(null=True)),
                (
                    "genre",
                    models.ManyToManyField(related_name="series", to="media.genre"),
                ),
            ],
            options={
                "verbose_name_plural": "series",
                "ordering": ("title",),
            },
        ),
        migrations.CreateModel(
            name="UserAnimeData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rate",
                    models.DecimalField(decimal_places=2, max_digits=3, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("1", "watching"),
                            ("2", "want to watch"),
                            ("3", "dropped"),
                            ("4", "finished"),
                        ],
                        default="2",
                        max_length=15,
                    ),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "anime",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="media.anime"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="anime",
            name="user",
            field=models.ManyToManyField(
                related_name="anime",
                through="media.UserAnimeData",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="UserCartoonData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rate",
                    models.DecimalField(decimal_places=2, max_digits=3, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("1", "watching"),
                            ("2", "want to watch"),
                            ("3", "dropped"),
                            ("4", "finished"),
                        ],
                        default="2",
                        max_length=15,
                    ),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "cartoon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="media.cartoon"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="cartoon",
            name="user",
            field=models.ManyToManyField(
                related_name="cartoons",
                through="media.UserCartoonData",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="UserMovieData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rate",
                    models.DecimalField(decimal_places=2, max_digits=3, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("1", "watching"),
                            ("2", "want to watch"),
                            ("3", "dropped"),
                            ("4", "finished"),
                        ],
                        default="2",
                        max_length=15,
                    ),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="media.movie"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="movie",
            name="user",
            field=models.ManyToManyField(
                related_name="movies",
                through="media.UserMovieData",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="UserSeriesData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rate",
                    models.DecimalField(decimal_places=2, max_digits=3, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("1", "watching"),
                            ("2", "want to watch"),
                            ("3", "dropped"),
                            ("4", "finished"),
                        ],
                        default="2",
                        max_length=15,
                    ),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "series",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="media.series"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="series",
            name="user",
            field=models.ManyToManyField(
                related_name="series",
                through="media.UserSeriesData",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
    ]
